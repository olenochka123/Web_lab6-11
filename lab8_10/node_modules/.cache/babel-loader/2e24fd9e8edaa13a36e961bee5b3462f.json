{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/olenafito/WebstormProjects/react-firebase/src/components/catalog-page.js\",\n    _s = $RefreshSig$();\n\nimport { ProductsContainer, LatestProducts, ProductContainer, ProductInfo, ViewMore } from '../styles/products-list-styles';\nimport { Image, Spinner } from '../components/utils';\nimport FilterTile from '../components/filter-tile';\nimport { useEffect, useState } from 'react';\nimport { getFilteredTools } from '../connection.js';\nimport { Link } from \"react-router-dom\";\nexport default function CatalogPage(props) {\n  _s();\n\n  const [border, setBorder] = useState(8);\n  const [equip, setEquip] = useState(null);\n  const [EquipToShow, setEquipToShow] = useState(null);\n  const [typeFilter, setTypeFilter] = useState('None');\n  const [conditionFilter, setManufacturerFilter] = useState('None');\n  const [searchText, setSearchText] = useState('');\n\n  function showMore() {\n    setBorder(border + 4);\n    window.scrollTo({\n      top: 0\n    });\n  }\n\n  useEffect(() => {\n    (async function () {\n      setEquip(await getFilteredTools(typeFilter, conditionFilter));\n    })();\n  }, [typeFilter, conditionFilter]);\n  useEffect(() => {\n    if (!equip) {\n      return;\n    }\n\n    const pattern = new RegExp(searchText, 'i');\n    let filteredItems = equip;\n\n    if (searchText !== '') {\n      filteredItems = equip.filter(item => pattern.test(item.header) || pattern.test(item.description) || pattern.test(item.price));\n    }\n\n    setEquipToShow(filteredItems.slice(0, border));\n  }, [border, searchText, equip]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterTile, {\n      type: [typeFilter, setTypeFilter],\n      condition: [conditionFilter, setManufacturerFilter],\n      search: [searchText, setSearchText]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), !EquipToShow ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(ProductsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LatestProducts, {\n        children: props.header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), EquipToShow.map((equip, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/equip/\" + equip.id,\n        children: /*#__PURE__*/_jsxDEV(ProductContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            img: equip.img,\n            width: \"200px\",\n            height: \"250px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: equip.header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Price: \", equip.price, \"$\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [equip.condition, \" \", equip.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(ViewMore, {\n      onClick: showMore,\n      children: \"View More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CatalogPage, \"w3I0Ewb176AejafM1xyWQdImHqc=\");\n\n_c = CatalogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"sources":["/Users/olenafito/WebstormProjects/react-firebase/src/components/catalog-page.js"],"names":["ProductsContainer","LatestProducts","ProductContainer","ProductInfo","ViewMore","Image","Spinner","FilterTile","useEffect","useState","getFilteredTools","Link","CatalogPage","props","border","setBorder","equip","setEquip","EquipToShow","setEquipToShow","typeFilter","setTypeFilter","conditionFilter","setManufacturerFilter","searchText","setSearchText","showMore","window","scrollTo","top","pattern","RegExp","filteredItems","filter","item","test","header","description","price","slice","map","index","id","img","condition","text"],"mappings":"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","sourcesContent":["import {ProductsContainer, LatestProducts, ProductContainer, ProductInfo, ViewMore} from '../styles/products-list-styles'\nimport { Image, Spinner } from '../components/utils'\nimport FilterTile from '../components/filter-tile'\nimport { useEffect, useState } from 'react'\nimport { getFilteredTools } from '../connection.js'\nimport { Link } from \"react-router-dom\";\n\nexport default function CatalogPage(props) { \n    const [border, setBorder] = useState(8);\n    const [equip, setEquip] = useState(null);\n    const [EquipToShow, setEquipToShow] = useState(null);\n    const [typeFilter, setTypeFilter] = useState('None');\n    const [conditionFilter, setManufacturerFilter] = useState('None');\n    const [searchText, setSearchText] = useState('')\n\n    function showMore() {\n        setBorder(border + 4);\n        window.scrollTo({ top: 0 })\n    }\n\n    useEffect(() => {\n        (async function () {\n            setEquip(await getFilteredTools(typeFilter, conditionFilter));\n        })()\n    }, [typeFilter, conditionFilter]);\n\n    useEffect(() => {\n        if (!equip) { return }  \n        const pattern = new RegExp(searchText, 'i');\n        let filteredItems = equip;\n        if (searchText !== '') {\n            filteredItems = equip.filter(item => (pattern.test(item.header) ||\n                pattern.test(item.description) || pattern.test(item.price)));\n        }\n        setEquipToShow(filteredItems.slice(0, border));\n    }, [border, searchText, equip]);\n\n    return (\n        <>\n        <FilterTile type={[typeFilter, setTypeFilter]}\n                    condition={[conditionFilter, setManufacturerFilter]}\n                    search={[searchText, setSearchText]} />\n        \n        {!EquipToShow ? <Spinner/> : <ProductsContainer>\n            <LatestProducts>{props.header}</LatestProducts>\n\n            {EquipToShow.map((equip, index) =>\n                <Link to={\"/equip/\" + equip.id}>\n                    <ProductContainer>\n                        <Image img={equip.img} width='200px' height='250px' />\n                        <ProductInfo>  \n                            <h1>{equip.header}</h1>\n                            <h2>Price: {equip.price}$</h2>\n                            <div>{equip.condition} {equip.text}</div>\n                        </ProductInfo>\n                    </ProductContainer>\n                </Link>\n                )}\n        </ProductsContainer>}\n        <ViewMore onClick={showMore}>View More</ViewMore>\n        </>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}